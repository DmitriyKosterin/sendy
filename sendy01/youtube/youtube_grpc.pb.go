// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.12.4
// source: youtube.proto

package youtube

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	YouTube_GetPlaylist_FullMethodName = "/YouTube/GetPlaylist"
)

// YouTubeClient is the client API for YouTube service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type YouTubeClient interface {
	GetPlaylist(ctx context.Context, in *PlaylistRequest, opts ...grpc.CallOption) (*PlaylistResponse, error)
}

type youTubeClient struct {
	cc grpc.ClientConnInterface
}

func NewYouTubeClient(cc grpc.ClientConnInterface) YouTubeClient {
	return &youTubeClient{cc}
}

func (c *youTubeClient) GetPlaylist(ctx context.Context, in *PlaylistRequest, opts ...grpc.CallOption) (*PlaylistResponse, error) {
	out := new(PlaylistResponse)
	err := c.cc.Invoke(ctx, YouTube_GetPlaylist_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// YouTubeServer is the server API for YouTube service.
// All implementations must embed UnimplementedYouTubeServer
// for forward compatibility
type YouTubeServer interface {
	GetPlaylist(context.Context, *PlaylistRequest) (*PlaylistResponse, error)
	mustEmbedUnimplementedYouTubeServer()
}

// UnimplementedYouTubeServer must be embedded to have forward compatible implementations.
type UnimplementedYouTubeServer struct {
}

func (UnimplementedYouTubeServer) GetPlaylist(context.Context, *PlaylistRequest) (*PlaylistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPlaylist not implemented")
}
func (UnimplementedYouTubeServer) mustEmbedUnimplementedYouTubeServer() {}

// UnsafeYouTubeServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to YouTubeServer will
// result in compilation errors.
type UnsafeYouTubeServer interface {
	mustEmbedUnimplementedYouTubeServer()
}

func RegisterYouTubeServer(s grpc.ServiceRegistrar, srv YouTubeServer) {
	s.RegisterService(&YouTube_ServiceDesc, srv)
}

func _YouTube_GetPlaylist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlaylistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YouTubeServer).GetPlaylist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: YouTube_GetPlaylist_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YouTubeServer).GetPlaylist(ctx, req.(*PlaylistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// YouTube_ServiceDesc is the grpc.ServiceDesc for YouTube service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var YouTube_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "YouTube",
	HandlerType: (*YouTubeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPlaylist",
			Handler:    _YouTube_GetPlaylist_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "youtube.proto",
}
